(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[14],{

/***/ "./resources/js/controllers/RegisterController.js":
/*!********************************************************!*\
  !*** ./resources/js/controllers/RegisterController.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _functions_validateEmail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../functions/validateEmail */ \"./resources/js/functions/validateEmail.js\");\n/* harmony import */ var _components_Notifications__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Notifications */ \"./resources/js/components/Notifications.js\");\n/* harmony import */ var _vue_store_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vue/store/store */ \"./resources/js/vue/store/store.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar RegisterController = /*#__PURE__*/function () {\n  function RegisterController() {\n    _classCallCheck(this, RegisterController);\n\n    var auth = document.querySelector('.auth-decor');\n    this.modal = document.querySelector('#passReset');\n    this.passResetForm = document.querySelector('#passResetForm');\n    this.store = _vue_store_store__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    var that = this;\n    auth && this._setListeners();\n    auth && this._showHidePassword();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.form_type-item').on('click', function (e) {\n      that._pickFaceType(e);\n    });\n\n    if (auth) {\n      this.passReset();\n      this.testIfUserFromPasswordResetEmail();\n    }\n  }\n\n  _createClass(RegisterController, [{\n    key: \"passResetHandler\",\n    value: function passResetHandler() {\n      var _this = this;\n\n      var inputs = this.passResetForm.querySelectorAll('input');\n      var btn = this.passResetForm.querySelector('[data-passresetbtn]');\n      var that = this;\n      var notParams = {\n        status: 'success',\n        pos: 'top-center',\n        timeout: 3000\n      };\n      btn.addEventListener('click', function () {\n        var dataObj = {};\n        var that = _this;\n        inputs.forEach(function (npt) {\n          var name = npt.getAttribute('name');\n          var val = npt.value;\n          dataObj[name] = val;\n        });\n        dataObj.email = _this.email;\n\n        if (dataObj.new_password === dataObj.new_password_confirm) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n            method: 'POST',\n            url: \"/StoreNewPasswordEmail\",\n            data: dataObj,\n            success: function success(status) {\n              notParams.message = 'Пароль успешно изменен.';\n              notParams.status = 'success';\n              var notification = new _components_Notifications__WEBPACK_IMPORTED_MODULE_2__[\"default\"](notParams);\n              notification.show();\n              UIkit.modal(that.passResetForm).hide();\n            },\n            error: function error(_error) {\n              notParams.message = 'Что-то пошло не так, попробуйте еще раз.';\n              notParams.status = 'danger';\n              var notification = new _components_Notifications__WEBPACK_IMPORTED_MODULE_2__[\"default\"](notParams);\n              notification.show();\n            }\n          });\n        } else {\n          notParams.message = 'Пароли должны совпадать.';\n          notParams.status = 'danger';\n          var notification = new _components_Notifications__WEBPACK_IMPORTED_MODULE_2__[\"default\"](notParams);\n          notification.show();\n        }\n      });\n    }\n  }, {\n    key: \"checkTokenExpireDate\",\n    value: function checkTokenExpireDate() {\n      var token, email, curUrl;\n      var that = this;\n      curUrl = window.location.href;\n      token = curUrl.split('?')[1].split('=')[1];\n      email = curUrl.split('?')[2].split('=')[1];\n      this.email = email;\n      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n        method: 'post',\n        url: '/checkTokenExpireDate',\n        data: {\n          token: token,\n          email: email\n        },\n        success: function success(data) {\n          if (data.status === 200) {\n            that.passResetHandler();\n          } else {\n            var params = {\n              message: 'Ссылка просрочена, попробуйте заново.',\n              status: 'danger',\n              pos: 'top-center',\n              timeout: 2000\n            };\n            UIkit.modal(that.passResetForm).hide();\n            var notification = new _components_Notifications__WEBPACK_IMPORTED_MODULE_2__[\"default\"](params);\n            notification.show();\n          }\n        },\n        error: function error(_error2) {\n          console.error('pass reset ajax error', _error2);\n        }\n      });\n    }\n  }, {\n    key: \"openChangePassModal\",\n    value: function openChangePassModal() {\n      UIkit.modal(this.passResetForm).show();\n      this.checkTokenExpireDate();\n    }\n  }, {\n    key: \"testIfUserFromPasswordResetEmail\",\n    value: function testIfUserFromPasswordResetEmail() {\n      var url = window.location.href;\n\n      if (url.indexOf('token') >= 0) {\n        this.openChangePassModal();\n      }\n    }\n  }, {\n    key: \"passReset\",\n    value: function passReset() {\n      var emailSentPopup = document.querySelector('#emailHasBeenSent');\n      var btn = this.modal.querySelector('[data-resetPassEmail]');\n      var formGroup = this.modal.querySelector('.form_group');\n      var that = this;\n      btn && btn.addEventListener('click', function (e) {\n        var email = that.modal.querySelector('input').value;\n        var valid = Object(_functions_validateEmail__WEBPACK_IMPORTED_MODULE_1__[\"validateEmail\"])(email);\n\n        if (!valid) {\n          formGroup.classList.add('form_group-error');\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n            method: 'POST',\n            url: '/sendPasswordResetEmail',\n            data: {\n              email: email\n            },\n            success: function success(data) {\n              if (data.status == '200') {\n                UIkit.modal(that.modal).hide();\n                UIkit.modal(emailSentPopup).show();\n              }\n            },\n            error: function error(_error3) {\n              console.error('pass reset ajax error');\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_showHidePassword\",\n    value: function _showHidePassword() {\n      var fields = document.querySelectorAll('.password_field');\n      fields.forEach(function (field) {\n        var icon = field.querySelector('.password_field-label');\n        var input = field.querySelector('.password_input');\n        var clicked = false;\n        icon.addEventListener('click', function () {\n          if (!clicked) {\n            input.setAttribute('type', 'text');\n            clicked = true;\n          } else {\n            input.setAttribute('type', 'password');\n            clicked = false;\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_setError\",\n    value: function _setError(str, type) {\n      var item;\n      var jsonStr = JSON.stringify(str);\n\n      if (type === 'register') {\n        item = document.querySelector('[data-register]');\n      } else {\n        item = document.querySelector('[data-auth]');\n      }\n\n      item.classList.add('invalid');\n\n      if (jsonStr.indexOf('required') >= 0) {\n        item.innerText = 'Проверьте пароль.';\n        return;\n      }\n\n      if (jsonStr.indexOf('email') >= 0) {\n        item.innerText = 'Проверьте почту.';\n        return;\n      }\n\n      if (jsonStr.indexOf('invalid') >= 0) {\n        item.innerText = 'Проверьте правильность введенных данных.';\n        return;\n      }\n\n      if (jsonStr.indexOf('taken') >= 0) {\n        item.innerText = 'Почтовый ящик уже зарегистрирован.';\n        return;\n      }\n\n      if (jsonStr.indexOf('least') >= 0) {\n        item.innerText = 'Пароль должен быть не короче 8 символов.';\n        return;\n      }\n    }\n  }, {\n    key: \"_pickFaceType\",\n    value: function _pickFaceType(etc) {\n      var inputs = document.querySelectorAll('.form_type-item');\n      var el = etc.currentTarget;\n      var text = el.querySelector('.form_type-itemText_inner').innerText;\n      inputs.forEach(function (el) {\n        el.classList.remove('activeFormItem');\n        var faceInput = document.querySelector('[name=\"face\"]');\n        var name;\n\n        if (text === 'Физ. лицо') {\n          name = 'fizik';\n        } else {\n          name = 'urik';\n        }\n\n        if (text) faceInput.setAttribute('value', name);\n      });\n      el.classList.toggle('activeFormItem');\n    }\n  }, {\n    key: \"_agreementCheck\",\n    value: function _agreementCheck() {\n      var item = document.querySelector('[data-register]');\n      var agreement = document.querySelector('.agreement');\n      var check = agreement.querySelector('.checkbox-wrap_arrow');\n      var span = agreement.querySelector('span');\n\n      if (check.classList.contains('invisible')) {\n        span.classList.add('invalid');\n        item.innerText = 'Вам необходимо принять пользовательское соглашение.';\n        return false;\n      } else {\n        span.classList.remove('invalid');\n        item.innerText = 'Зарегистрируйте свой аккаунт используя любой способ.';\n        return true;\n      }\n    }\n  }, {\n    key: \"_validator\",\n    value: function _validator(form) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var status = false;\n\n      if (type != '') {\n        status = this._agreementCheck();\n      } else {\n        status = true;\n      }\n\n      status && this._ajaxCall(form);\n\n      try {\n        window.app.validator.formValidate([], jquery__WEBPACK_IMPORTED_MODULE_0___default()(form));\n      } catch (err) {\n        this._setError(err.message, type);\n      }\n    }\n  }, {\n    key: \"_sendGAevent\",\n    value: function _sendGAevent(type) {\n      window.ga(\"send\", \"event\", \"auth\", type);\n    }\n  }, {\n    key: \"showUnverifiedPopup\",\n    value: function showUnverifiedPopup() {\n      document.location.reload();\n    }\n  }, {\n    key: \"_ajaxCall\",\n    value: function _ajaxCall(form) {\n      var url = form.getAttribute('action');\n      var method = form.getAttribute('method');\n      var inputs = form.querySelectorAll('input');\n      var that = this;\n      var dataObj = {};\n      inputs.forEach(function (npt) {\n        var name = npt.getAttribute('name');\n        var val = jquery__WEBPACK_IMPORTED_MODULE_0___default()(npt).val();\n        dataObj[name] = val;\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default.a.ajax({\n        method: method,\n        url: \"\".concat(url),\n        data: dataObj,\n        success: function success() {\n          var host = window.location.host;\n          var protocol = window.location.protocol;\n          window.location.href = protocol + '//' + host + \"/home\";\n        },\n        error: function error(_error4) {\n          console.warn(_error4, 'login action');\n\n          if (_error4.status === 403) {\n            that.showUnverifiedPopup();\n            return;\n          }\n\n          if (_error4.responseText.indexOf('taken') > 0 || _error4.responseText.indexOf('least') > 0) {\n            that._setError(_error4.responseText, 'register');\n          } else {\n            that._setError(_error4.responseText, 'login');\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_setListeners\",\n    value: function _setListeners() {\n      var loginForm = document.querySelector('[data-loginform]');\n      var registerForm = document.querySelector('[data-registerform]');\n      var loginSubmit = loginForm.querySelector('.yellow_btn');\n      var regSubmit = registerForm.querySelector('.yellow_btn');\n      var that = this;\n      var arr = [loginSubmit, regSubmit];\n      arr.forEach(function (el) {\n        el.addEventListener('click', function (e) {\n          e.preventDefault();\n\n          if (e.target.dataset.loginform) {\n            that._validator(loginForm);\n\n            that._sendGAevent('login');\n          }\n\n          if (e.target.dataset.registerform) {\n            that._validator(registerForm, 'register');\n\n            that._sendGAevent('register');\n          }\n        });\n      });\n    }\n  }]);\n\n  return RegisterController;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (RegisterController);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29udHJvbGxlcnMvUmVnaXN0ZXJDb250cm9sbGVyLmpzPzNjYTYiXSwibmFtZXMiOlsiUmVnaXN0ZXJDb250cm9sbGVyIiwiYXV0aCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIm1vZGFsIiwicGFzc1Jlc2V0Rm9ybSIsInN0b3JlIiwidGhhdCIsIl9zZXRMaXN0ZW5lcnMiLCJfc2hvd0hpZGVQYXNzd29yZCIsIiQiLCJvbiIsImUiLCJfcGlja0ZhY2VUeXBlIiwicGFzc1Jlc2V0IiwidGVzdElmVXNlckZyb21QYXNzd29yZFJlc2V0RW1haWwiLCJpbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnRuIiwibm90UGFyYW1zIiwic3RhdHVzIiwicG9zIiwidGltZW91dCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkYXRhT2JqIiwiZm9yRWFjaCIsIm5wdCIsIm5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJ2YWwiLCJ2YWx1ZSIsImVtYWlsIiwibmV3X3Bhc3N3b3JkIiwibmV3X3Bhc3N3b3JkX2NvbmZpcm0iLCJhamF4IiwibWV0aG9kIiwidXJsIiwiZGF0YSIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwibm90aWZpY2F0aW9uIiwiTm90aWZpY2F0aW9ucyIsInNob3ciLCJVSWtpdCIsImhpZGUiLCJlcnJvciIsInRva2VuIiwiY3VyVXJsIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwic3BsaXQiLCJwYXNzUmVzZXRIYW5kbGVyIiwicGFyYW1zIiwiY29uc29sZSIsImNoZWNrVG9rZW5FeHBpcmVEYXRlIiwiaW5kZXhPZiIsIm9wZW5DaGFuZ2VQYXNzTW9kYWwiLCJlbWFpbFNlbnRQb3B1cCIsImZvcm1Hcm91cCIsInZhbGlkIiwidmFsaWRhdGVFbWFpbCIsImNsYXNzTGlzdCIsImFkZCIsImZpZWxkcyIsImZpZWxkIiwiaWNvbiIsImlucHV0IiwiY2xpY2tlZCIsInNldEF0dHJpYnV0ZSIsInN0ciIsInR5cGUiLCJpdGVtIiwianNvblN0ciIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbm5lclRleHQiLCJldGMiLCJlbCIsImN1cnJlbnRUYXJnZXQiLCJ0ZXh0IiwicmVtb3ZlIiwiZmFjZUlucHV0IiwidG9nZ2xlIiwiYWdyZWVtZW50IiwiY2hlY2siLCJzcGFuIiwiY29udGFpbnMiLCJmb3JtIiwiX2FncmVlbWVudENoZWNrIiwiX2FqYXhDYWxsIiwiYXBwIiwidmFsaWRhdG9yIiwiZm9ybVZhbGlkYXRlIiwiZXJyIiwiX3NldEVycm9yIiwiZ2EiLCJyZWxvYWQiLCJob3N0IiwicHJvdG9jb2wiLCJ3YXJuIiwic2hvd1VudmVyaWZpZWRQb3B1cCIsInJlc3BvbnNlVGV4dCIsImxvZ2luRm9ybSIsInJlZ2lzdGVyRm9ybSIsImxvZ2luU3VibWl0IiwicmVnU3VibWl0IiwiYXJyIiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCJkYXRhc2V0IiwibG9naW5mb3JtIiwiX3ZhbGlkYXRvciIsIl9zZW5kR0FldmVudCIsInJlZ2lzdGVyZm9ybSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0lBRU1BLGtCO0FBQ0YsZ0NBQWM7QUFBQTs7QUFDVixRQUFJQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFYO0FBQ0EsU0FBS0MsS0FBTCxHQUFhRixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsWUFBdkIsQ0FBYjtBQUNBLFNBQUtFLGFBQUwsR0FBcUJILFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixnQkFBdkIsQ0FBckI7QUFDQSxTQUFLRyxLQUFMLEdBQWFBLHdEQUFiO0FBRUEsUUFBSUMsSUFBSSxHQUFHLElBQVg7QUFFQU4sUUFBSSxJQUFJLEtBQUtPLGFBQUwsRUFBUjtBQUNBUCxRQUFJLElBQUksS0FBS1EsaUJBQUwsRUFBUjtBQUVBQyxpREFBQyxDQUFDLGlCQUFELENBQUQsQ0FBcUJDLEVBQXJCLENBQXdCLE9BQXhCLEVBQWlDLFVBQVVDLENBQVYsRUFBYTtB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d0IsYUFBeEIsQ0FBbEI7QUFDQSxVQUFJdUcsU0FBUyxHQUFHRixZQUFZLENBQUNyRyxhQUFiLENBQTJCLGFBQTNCLENBQWhCO0FBQ0EsVUFBSUksSUFBSSxHQUFHLElBQVg7QUFFQSxVQUFJb0csR0FBRyxHQUFHLENBQUNGLFdBQUQsRUFBY0MsU0FBZCxDQUFWO0FBRUFDLFNBQUcsQ0FBQ2xGLE9BQUosQ0FBWSxVQUFDcUQsRUFBRCxFQUFRO0FBQ2hCQSxVQUFFLENBQUN2RCxnQkFBSCxDQUFvQixPQUFwQixFQUE2QixVQUFDWCxDQUFELEVBQU87QUFDaENBLFdBQUMsQ0FBQ2dHLGNBQUY7O0FBRUEsY0FBSWhHLENBQUMsQ0FBQ2lHLE1BQUYsQ0FBU0MsT0FBVCxDQUFpQkMsU0FBckIsRUFBZ0M7QUFDNUJ4RyxnQkFBSSxDQUFDeUcsVUFBTCxDQUFnQlQsU0FBaEI7O0FBQ0FoRyxnQkFBSSxDQUFDMEcsWUFBTCxDQUFrQixPQUFsQjtBQUNIOztBQUVELGNBQUlyRyxDQUFDLENBQUNpRyxNQUFGLENBQVNDLE9BQVQsQ0FBaUJJLFlBQXJCLEVBQW1DO0FBQy9CM0csZ0JBQUksQ0FBQ3lHLFVBQUwsQ0FBZ0JSLFlBQWhCLEVBQThCLFVBQTlCOztBQUNBakcsZ0JBQUksQ0FBQzBHLFlBQUwsQ0FBa0IsVUFBbEI7QUFDSDtBQUNKLFNBWkQ7QUFhSCxPQWREO0FBZUg7Ozs7OztBQUdVakgsaUZBQWYiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvY29udHJvbGxlcnMvUmVnaXN0ZXJDb250cm9sbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7dmFsaWRhdGVFbWFpbH0gZnJvbSBcIi4uL2Z1bmN0aW9ucy92YWxpZGF0ZUVtYWlsXCI7XG5pbXBvcnQgTm90aWZpY2F0aW9ucyBmcm9tICcuLi9jb21wb25lbnRzL05vdGlmaWNhdGlvbnMnO1xuaW1wb3J0IHN0b3JlIGZyb20gJy4uL3Z1ZS9zdG9yZS9zdG9yZSc7XG5cbmNsYXNzIFJlZ2lzdGVyQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGxldCBhdXRoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmF1dGgtZGVjb3InKTtcbiAgICAgICAgdGhpcy5tb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwYXNzUmVzZXQnKTtcbiAgICAgICAgdGhpcy5wYXNzUmVzZXRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Bhc3NSZXNldEZvcm0nKTtcbiAgICAgICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuXG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICBhdXRoICYmIHRoaXMuX3NldExpc3RlbmVycygpO1xuICAgICAgICBhdXRoICYmIHRoaXMuX3Nob3dIaWRlUGFzc3dvcmQoKTtcblxuICAgICAgICAkKCcuZm9ybV90eXBlLWl0ZW0nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhhdC5fcGlja0ZhY2VUeXBlKGUpXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChhdXRoKSB7XG4gICAgICAgICAgICB0aGlzLnBhc3NSZXNldCgpO1xuICAgICAgICAgICAgdGhpcy50ZXN0SWZVc2VyRnJvbVBhc3N3b3JkUmVzZXRFbWFpbCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcGFzc1Jlc2V0SGFuZGxlcigpIHtcbiAgICAgICAgbGV0IGlucHV0cyA9IHRoaXMucGFzc1Jlc2V0Rm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpO1xuICAgICAgICBsZXQgYnRuID0gdGhpcy5wYXNzUmVzZXRGb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXBhc3NyZXNldGJ0bl0nKTtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuXG4gICAgICAgIGxldCBub3RQYXJhbXMgPSB7XG4gICAgICAgICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgIHBvczogJ3RvcC1jZW50ZXInLFxuICAgICAgICAgICAgdGltZW91dDogMzAwMFxuICAgICAgICB9XG5cbiAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGRhdGFPYmogPSB7fTtcbiAgICAgICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICAgICAgaW5wdXRzLmZvckVhY2gobnB0ID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbmFtZSA9IG5wdC5nZXRBdHRyaWJ1dGUoJ25hbWUnKVxuICAgICAgICAgICAgICAgIGxldCB2YWwgPSBucHQudmFsdWU7XG5cbiAgICAgICAgICAgICAgICBkYXRhT2JqW25hbWVdID0gdmFsO1xuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgZGF0YU9iai5lbWFpbCA9IHRoaXMuZW1haWw7XG4gICAgICAgICAgICBpZiAoZGF0YU9iai5uZXdfcGFzc3dvcmQgPT09IGRhdGFPYmoubmV3X3Bhc3N3b3JkX2NvbmZpcm0pIHtcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBgL1N0b3JlTmV3UGFzc3dvcmRFbWFpbGAsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGFPYmosXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdFBhcmFtcy5tZXNzYWdlID0gJ9Cf0LDRgNC+0LvRjCDRg9GB0L/QtdGI0L3QviDQuNC30LzQtdC90LXQvS4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm90UGFyYW1zLnN0YXR1cyA9ICdzdWNjZXNzJztcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5vdGlmaWNhdGlvbiA9IG5ldyBOb3RpZmljYXRpb25zKG5vdFBhcmFtcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5zaG93KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFVJa2l0Lm1vZGFsKHRoYXQucGFzc1Jlc2V0Rm9ybSkuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub3RQYXJhbXMubWVzc2FnZSA9ICfQp9GC0L4t0YLQviDQv9C+0YjQu9C+INC90LUg0YLQsNC6LCDQv9C+0L/RgNC+0LHRg9C50YLQtSDQtdGJ0LUg0YDQsNC3Lic7XG4gICAgICAgICAgICAgICAgICAgICAgICBub3RQYXJhbXMuc3RhdHVzID0gJ2Rhbmdlcic7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBub3RpZmljYXRpb24gPSBuZXcgTm90aWZpY2F0aW9ucyhub3RQYXJhbXMpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5vdFBhcmFtcy5tZXNzYWdlID0gJ9Cf0LDRgNC+0LvQuCDQtNC+0LvQttC90Ysg0YHQvtCy0L/QsNC00LDRgtGMLic7XG4gICAgICAgICAgICAgICAgbm90UGFyYW1zLnN0YXR1cyA9ICdkYW5nZXInO1xuXG4gICAgICAgICAgICAgICAgbGV0IG5vdGlmaWNhdGlvbiA9IG5ldyBOb3RpZmljYXRpb25zKG5vdFBhcmFtcyk7XG5cbiAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uc2hvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNoZWNrVG9rZW5FeHBpcmVEYXRlKCkge1xuICAgICAgICBsZXQgdG9rZW4sIGVtYWlsLCBjdXJVcmw7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICBjdXJVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICAgICAgdG9rZW4gPSBjdXJVcmwuc3BsaXQoJz8nKVsxXS5zcGxpdCgnPScpWzFdO1xuICAgICAgICBlbWFpbCA9IGN1clVybC5zcGxpdCgnPycpWzJdLnNwbGl0KCc9JylbMV07XG5cbiAgICAgICAgdGhpcy5lbWFpbCA9IGVtYWlsO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgICAgIHVybDogJy9jaGVja1Rva2VuRXhwaXJlRGF0ZScsXG4gICAgICAgICAgICBkYXRhOiB7dG9rZW4sIGVtYWlsfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5wYXNzUmVzZXRIYW5kbGVyKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBhcmFtcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfQodGB0YvQu9C60LAg0L/RgNC+0YHRgNC+0YfQtdC90LAsINC/0L7Qv9GA0L7QsdGD0LnRgtC1INC30LDQvdC+0LLQvi4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnZGFuZ2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvczogJ3RvcC1jZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogMjAwMFxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgVUlraXQubW9kYWwodGhhdC5wYXNzUmVzZXRGb3JtKS5oaWRlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IG5vdGlmaWNhdGlvbiA9IG5ldyBOb3RpZmljYXRpb25zKHBhcmFtcyk7XG4gICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5zaG93KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdwYXNzIHJlc2V0IGFqYXggZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgb3BlbkNoYW5nZVBhc3NNb2RhbCgpIHtcbiAgICAgICAgVUlraXQubW9kYWwodGhpcy5wYXNzUmVzZXRGb3JtKS5zaG93KCk7XG4gICAgICAgIHRoaXMuY2hlY2tUb2tlbkV4cGlyZURhdGUoKTtcbiAgICB9XG5cbiAgICB0ZXN0SWZVc2VyRnJvbVBhc3N3b3JkUmVzZXRFbWFpbCgpIHtcbiAgICAgICAgbGV0IHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgICAgICBpZiAodXJsLmluZGV4T2YoJ3Rva2VuJykgPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5vcGVuQ2hhbmdlUGFzc01vZGFsKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwYXNzUmVzZXQoKSB7XG4gICAgICAgIGxldCBlbWFpbFNlbnRQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlbWFpbEhhc0JlZW5TZW50Jyk7XG5cbiAgICAgICAgbGV0IGJ0biA9IHRoaXMubW9kYWwucXVlcnlTZWxlY3RvcignW2RhdGEtcmVzZXRQYXNzRW1haWxdJyk7XG4gICAgICAgIGxldCBmb3JtR3JvdXAgPSB0aGlzLm1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX2dyb3VwJyk7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcblxuICAgICAgICBidG4gJiYgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGxldCBlbWFpbCA9IHRoYXQubW9kYWwucXVlcnlTZWxlY3RvcignaW5wdXQnKS52YWx1ZTtcbiAgICAgICAgICAgIGxldCB2YWxpZCA9IHZhbGlkYXRlRW1haWwoZW1haWwpO1xuXG4gICAgICAgICAgICBpZiAoIXZhbGlkKSB7XG4gICAgICAgICAgICAgICAgZm9ybUdyb3VwLmNsYXNzTGlzdC5hZGQoJ2Zvcm1fZ3JvdXAtZXJyb3InKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9zZW5kUGFzc3dvcmRSZXNldEVtYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgZGF0YToge2VtYWlsfSxcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnN0YXR1cyA9PSAnMjAwJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVJa2l0Lm1vZGFsKHRoYXQubW9kYWwpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVSWtpdC5tb2RhbChlbWFpbFNlbnRQb3B1cCkuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdwYXNzIHJlc2V0IGFqYXggZXJyb3InKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIF9zaG93SGlkZVBhc3N3b3JkKCkge1xuICAgICAgICBsZXQgZmllbGRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBhc3N3b3JkX2ZpZWxkJyk7XG4gICAgICAgIGZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAgICAgICAgICAgbGV0IGljb24gPSBmaWVsZC5xdWVyeVNlbGVjdG9yKCcucGFzc3dvcmRfZmllbGQtbGFiZWwnKTtcbiAgICAgICAgICAgIGxldCBpbnB1dCA9IGZpZWxkLnF1ZXJ5U2VsZWN0b3IoJy5wYXNzd29yZF9pbnB1dCcpO1xuICAgICAgICAgICAgbGV0IGNsaWNrZWQgPSBmYWxzZTtcblxuICAgICAgICAgICAgaWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNsaWNrZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3Bhc3N3b3JkJyk7XG4gICAgICAgICAgICAgICAgICAgIGNsaWNrZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIF9zZXRFcnJvcihzdHIsIHR5cGUpIHtcbiAgICAgICAgbGV0IGl0ZW07XG4gICAgICAgIGxldCBqc29uU3RyID0gSlNPTi5zdHJpbmdpZnkoc3RyKTtcblxuICAgICAgICBpZiAodHlwZSA9PT0gJ3JlZ2lzdGVyJykge1xuICAgICAgICAgICAgaXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXJlZ2lzdGVyXScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWF1dGhdJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ2ludmFsaWQnKTtcblxuICAgICAgICBpZiAoanNvblN0ci5pbmRleE9mKCdyZXF1aXJlZCcpID49IDApIHtcbiAgICAgICAgICAgIGl0ZW0uaW5uZXJUZXh0ID0gJ9Cf0YDQvtCy0LXRgNGM0YLQtSDQv9Cw0YDQvtC70YwuJztcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoanNvblN0ci5pbmRleE9mKCdlbWFpbCcpID49IDApIHtcbiAgICAgICAgICAgIGl0ZW0uaW5uZXJUZXh0ID0gJ9Cf0YDQvtCy0LXRgNGM0YLQtSDQv9C+0YfRgtGDLic7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGpzb25TdHIuaW5kZXhPZignaW52YWxpZCcpID49IDApIHtcbiAgICAgICAgICAgIGl0ZW0uaW5uZXJUZXh0ID0gJ9Cf0YDQvtCy0LXRgNGM0YLQtSDQv9GA0LDQstC40LvRjNC90L7RgdGC0Ywg0LLQstC10LTQtdC90L3Ri9GFINC00LDQvdC90YvRhS4nO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChqc29uU3RyLmluZGV4T2YoJ3Rha2VuJykgPj0gMCkge1xuICAgICAgICAgICAgaXRlbS5pbm5lclRleHQgPSAn0J/QvtGH0YLQvtCy0YvQuSDRj9GJ0LjQuiDRg9C20LUg0LfQsNGA0LXQs9C40YHRgtGA0LjRgNC+0LLQsNC9Lic7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGpzb25TdHIuaW5kZXhPZignbGVhc3QnKSA+PSAwKSB7XG4gICAgICAgICAgICBpdGVtLmlubmVyVGV4dCA9ICfQn9Cw0YDQvtC70Ywg0LTQvtC70LbQtdC9INCx0YvRgtGMINC90LUg0LrQvtGA0L7Rh9C1IDgg0YHQuNC80LLQvtC70L7Qsi4nO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3BpY2tGYWNlVHlwZShldGMpIHtcbiAgICAgICAgbGV0IGlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb3JtX3R5cGUtaXRlbScpO1xuICAgICAgICBsZXQgZWwgPSBldGMuY3VycmVudFRhcmdldDtcbiAgICAgICAgbGV0IHRleHQgPSBlbC5xdWVyeVNlbGVjdG9yKCcuZm9ybV90eXBlLWl0ZW1UZXh0X2lubmVyJykuaW5uZXJUZXh0O1xuXG4gICAgICAgIGlucHV0cy5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlRm9ybUl0ZW0nKTtcbiAgICAgICAgICAgIGxldCBmYWNlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cImZhY2VcIl0nKTtcbiAgICAgICAgICAgIGxldCBuYW1lO1xuXG4gICAgICAgICAgICBpZiAodGV4dCA9PT0gJ9Ck0LjQty4g0LvQuNGG0L4nKSB7XG4gICAgICAgICAgICAgICAgbmFtZSA9ICdmaXppaydcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmFtZSA9ICd1cmlrJ1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGV4dCkgZmFjZUlucHV0LnNldEF0dHJpYnV0ZSgndmFsdWUnLCBuYW1lKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZWwuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlRm9ybUl0ZW0nKTtcbiAgICB9XG5cbiAgICBfYWdyZWVtZW50Q2hlY2soKSB7XG4gICAgICAgIGxldCBpdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtcmVnaXN0ZXJdJyk7XG4gICAgICAgIGxldCBhZ3JlZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWdyZWVtZW50Jyk7XG4gICAgICAgIGxldCBjaGVjayA9IGFncmVlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2hlY2tib3gtd3JhcF9hcnJvdycpO1xuICAgICAgICBsZXQgc3BhbiA9IGFncmVlbWVudC5xdWVyeVNlbGVjdG9yKCdzcGFuJyk7XG5cbiAgICAgICAgaWYgKGNoZWNrLmNsYXNzTGlzdC5jb250YWlucygnaW52aXNpYmxlJykpIHtcbiAgICAgICAgICAgIHNwYW4uY2xhc3NMaXN0LmFkZCgnaW52YWxpZCcpO1xuICAgICAgICAgICAgaXRlbS5pbm5lclRleHQgPSAn0JLQsNC8INC90LXQvtCx0YXQvtC00LjQvNC+INC/0YDQuNC90Y/RgtGMINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQvtC1INGB0L7Qs9C70LDRiNC10L3QuNC1LidcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNwYW4uY2xhc3NMaXN0LnJlbW92ZSgnaW52YWxpZCcpXG4gICAgICAgICAgICBpdGVtLmlubmVyVGV4dCA9ICfQl9Cw0YDQtdCz0LjRgdGC0YDQuNGA0YPQudGC0LUg0YHQstC+0Lkg0LDQutC60LDRg9C90YIg0LjRgdC/0L7Qu9GM0LfRg9GPINC70Y7QsdC+0Lkg0YHQv9C+0YHQvtCxLidcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3ZhbGlkYXRvcihmb3JtLCB0eXBlID0gJycpIHtcbiAgICAgICAgbGV0IHN0YXR1cyA9IGZhbHNlO1xuXG4gICAgICAgIGlmICh0eXBlICE9ICcnKSB7XG4gICAgICAgICAgICBzdGF0dXMgPSB0aGlzLl9hZ3JlZW1lbnRDaGVjaygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RhdHVzID0gdHJ1ZVxuICAgICAgICB9XG5cbiAgICAgICAgc3RhdHVzICYmIHRoaXMuX2FqYXhDYWxsKGZvcm0pO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB3aW5kb3cuYXBwLnZhbGlkYXRvci5mb3JtVmFsaWRhdGUoW10sICQoZm9ybSkpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldEVycm9yKGVyci5tZXNzYWdlLCB0eXBlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3NlbmRHQWV2ZW50KHR5cGUpIHtcbiAgICAgICAgd2luZG93LmdhKFwic2VuZFwiLCBcImV2ZW50XCIsIFwiYXV0aFwiLCB0eXBlKTtcbiAgICB9XG5cbiAgICBzaG93VW52ZXJpZmllZFBvcHVwKCkge1xuICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG5cbiAgICBfYWpheENhbGwoZm9ybSkge1xuICAgICAgICBsZXQgdXJsID0gZm9ybS5nZXRBdHRyaWJ1dGUoJ2FjdGlvbicpO1xuICAgICAgICBsZXQgbWV0aG9kID0gZm9ybS5nZXRBdHRyaWJ1dGUoJ21ldGhvZCcpO1xuICAgICAgICBsZXQgaW5wdXRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpO1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgICAgIGxldCBkYXRhT2JqID0ge307XG5cbiAgICAgICAgaW5wdXRzLmZvckVhY2goKG5wdCkgPT4ge1xuICAgICAgICAgICAgbGV0IG5hbWUgPSBucHQuZ2V0QXR0cmlidXRlKCduYW1lJyk7XG4gICAgICAgICAgICBsZXQgdmFsID0gJChucHQpLnZhbCgpO1xuICAgICAgICAgICAgZGF0YU9ialtuYW1lXSA9IHZhbDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgICAgICAgdXJsOiBgJHt1cmx9YCxcbiAgICAgICAgICAgIGRhdGE6IGRhdGFPYmosXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgbGV0IGhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdDtcbiAgICAgICAgICAgICAgICBsZXQgcHJvdG9jb2wgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2w7XG5cbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHByb3RvY29sICsgJy8vJyArIGhvc3QgKyBgL2hvbWVgO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oZXJyb3IsICdsb2dpbiBhY3Rpb24nKVxuXG4gICAgICAgICAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PT0gNDAzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuc2hvd1VudmVyaWZpZWRQb3B1cCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlVGV4dC5pbmRleE9mKCd0YWtlbicpID4gMCB8fCBlcnJvci5yZXNwb25zZVRleHQuaW5kZXhPZignbGVhc3QnKSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5fc2V0RXJyb3IoZXJyb3IucmVzcG9uc2VUZXh0LCAncmVnaXN0ZXInKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGF0Ll9zZXRFcnJvcihlcnJvci5yZXNwb25zZVRleHQsICdsb2dpbicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgX3NldExpc3RlbmVycygpIHtcbiAgICAgICAgbGV0IGxvZ2luRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxvZ2luZm9ybV0nKTtcbiAgICAgICAgbGV0IHJlZ2lzdGVyRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXJlZ2lzdGVyZm9ybV0nKTtcblxuICAgICAgICBsZXQgbG9naW5TdWJtaXQgPSBsb2dpbkZvcm0ucXVlcnlTZWxlY3RvcignLnllbGxvd19idG4nKTtcbiAgICAgICAgbGV0IHJlZ1N1Ym1pdCA9IHJlZ2lzdGVyRm9ybS5xdWVyeVNlbGVjdG9yKCcueWVsbG93X2J0bicpO1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG5cbiAgICAgICAgbGV0IGFyciA9IFtsb2dpblN1Ym1pdCwgcmVnU3VibWl0XTtcblxuICAgICAgICBhcnIuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQuZGF0YXNldC5sb2dpbmZvcm0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5fdmFsaWRhdG9yKGxvZ2luRm9ybSlcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5fc2VuZEdBZXZlbnQoJ2xvZ2luJylcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQuZGF0YXNldC5yZWdpc3RlcmZvcm0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5fdmFsaWRhdG9yKHJlZ2lzdGVyRm9ybSwgJ3JlZ2lzdGVyJylcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5fc2VuZEdBZXZlbnQoJ3JlZ2lzdGVyJylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVnaXN0ZXJDb250cm9sbGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/controllers/RegisterController.js\n");

/***/ }),

/***/ "./resources/js/functions/validateEmail.js":
/*!*************************************************!*\
  !*** ./resources/js/functions/validateEmail.js ***!
  \*************************************************/
/*! exports provided: validateEmail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateEmail\", function() { return validateEmail; });\nfunction validateEmail(email) {\n  var re = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n  return re.test(email);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZnVuY3Rpb25zL3ZhbGlkYXRlRW1haWwuanM/NGY4NyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZUVtYWlsIiwiZW1haWwiLCJyZSIsIlJlZ0V4cCIsInRlc3QiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSxTQUFTQSxhQUFULENBQXVCQyxLQUF2QixFQUNBO0FBQ0ksTUFBSUMsRUFBRSxHQUFHLElBQUlDLE1BQUosQ0FBVyxpU0FBWCxDQUFUO0FBQ0EsU0FBT0QsRUFBRSxDQUFDRSxJQUFILENBQVFILEtBQVIsQ0FBUDtBQUNIIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2Z1bmN0aW9ucy92YWxpZGF0ZUVtYWlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdmFsaWRhdGVFbWFpbChlbWFpbClcbntcbiAgICBsZXQgcmUgPSBuZXcgUmVnRXhwKC9eKChcIltcXHctXFxzXStcIil8KFtcXHctXSsoPzpcXC5bXFx3LV0rKSopfChcIltcXHctXFxzXStcIikoW1xcdy1dKyg/OlxcLltcXHctXSspKikpKEAoKD86W1xcdy1dK1xcLikqXFx3W1xcdy1dezAsNjZ9KVxcLihbYS16XXsyLDZ9KD86XFwuW2Etel17Mn0pPykkKXwoQFxcWz8oKDI1WzAtNV1cXC58MlswLTRdWzAtOV1cXC58MVswLTldezJ9XFwufFswLTldezEsMn1cXC4pKSgoMjVbMC01XXwyWzAtNF1bMC05XXwxWzAtOV17Mn18WzAtOV17MSwyfSlcXC4pezJ9KDI1WzAtNV18MlswLTRdWzAtOV18MVswLTldezJ9fFswLTldezEsMn0pXFxdPyQpL2kpO1xuICAgIHJldHVybiByZS50ZXN0KGVtYWlsKTtcbn1cblxuZXhwb3J0IHt2YWxpZGF0ZUVtYWlsfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/functions/validateEmail.js\n");

/***/ })

}]);